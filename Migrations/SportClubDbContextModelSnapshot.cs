// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportClubApi.Data;

#nullable disable

namespace SportClubApi.Migrations
{
    [DbContext(typeof(SportClubDbContext))]
    partial class SportClubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SportClubApi.Models.Administration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Administrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ut.lacus@icloud.ca",
                            Gender = "Man",
                            Login = "tuckertuc",
                            Name = "Tucker",
                            Password = "12345678",
                            Phone = "(958) 545-6274",
                            RoleId = 5,
                            Surname = "Harrington"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nulla.cras@protonmail.com",
                            Gender = "Woman",
                            Login = "serinaq",
                            Name = "Serina",
                            Password = "12345677",
                            Phone = "(566) 496-7373",
                            RoleId = 6,
                            Surname = "Holland"
                        });
                });

            modelBuilder.Entity("SportClubApi.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "turpis.egestas@yahoo.org",
                            Gender = "Woman",
                            Login = "melyssa3",
                            Name = "Melyssa ",
                            Password = "12345678",
                            Phone = "1-741-854-436",
                            RoleId = 1,
                            Surname = "Chapma"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "iaculis.odio@outlook.net",
                            Gender = "Man",
                            Login = "adele2",
                            Name = "Adele",
                            Password = "12345677",
                            Phone = "1-555-939-409",
                            RoleId = 1,
                            Surname = "Bond"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cras.dictum@yahoo.com",
                            Gender = "Man",
                            Login = "barron84",
                            Name = "Clementine",
                            Password = "12345688",
                            Phone = "(519) 440-6692",
                            RoleId = 1,
                            Surname = "Barron"
                        });
                });

            modelBuilder.Entity("SportClubApi.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "libero@protonmail.com",
                            Gender = "Woman",
                            Login = "zoe324",
                            Name = "Zoe",
                            Password = "12345678",
                            Phone = "1-726-649-8019",
                            RoleId = 2,
                            Specialization = "Dance",
                            Surname = "Lawrence"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vitae.nibh.donec@aol.org",
                            Gender = "Woman",
                            Login = "sonia2",
                            Name = "Sonia",
                            Password = "12345677",
                            Phone = "1-483-371-8688",
                            RoleId = 3,
                            Specialization = "Fitness",
                            Surname = "Pace"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "est@icloud.net",
                            Gender = "Man",
                            Login = "tanish33",
                            Name = "Tanish",
                            Password = "12345688",
                            Phone = "1-631-822-9587",
                            RoleId = 4,
                            Specialization = "Weightlifting",
                            Surname = "Wilkerson"
                        });
                });

            modelBuilder.Entity("SportClubApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Coach"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ChiefCoach"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SeniorCoach"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ChiefManager"
                        });
                });

            modelBuilder.Entity("SportClubApi.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MaxCountPeoples")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxCountPeoples = 10,
                            Name = "Small gym first floor"
                        },
                        new
                        {
                            Id = 2,
                            MaxCountPeoples = 10,
                            Name = "Small gym second floor"
                        },
                        new
                        {
                            Id = 3,
                            MaxCountPeoples = 30,
                            Name = "Big gym second floor"
                        });
                });

            modelBuilder.Entity("SportClubApi.Models.Administration", b =>
                {
                    b.HasOne("SportClubApi.Models.Role", "Role")
                        .WithMany("Administrations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SportClubApi.Models.Client", b =>
                {
                    b.HasOne("SportClubApi.Models.Role", "Role")
                        .WithMany("Clients")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SportClubApi.Models.Coach", b =>
                {
                    b.HasOne("SportClubApi.Models.Role", "Role")
                        .WithMany("Coachs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SportClubApi.Models.Role", b =>
                {
                    b.Navigation("Administrations");

                    b.Navigation("Clients");

                    b.Navigation("Coachs");
                });
#pragma warning restore 612, 618
        }
    }
}
